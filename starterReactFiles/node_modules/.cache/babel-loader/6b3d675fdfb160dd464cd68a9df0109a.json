{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rrand\\\\School\\\\cryptoDash\\\\starterReactFiles\\\\src\\\\SmChart.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SmChart() {\n  _s();\n\n  const [loading, setLoading] = React.useState(true);\n  const [items, setItems] = React.useState([]);\n  const [value, setValue] = React.useState();\n  React.useEffect(() => {\n    let unmounted = false;\n\n    async function getCurrencies() {\n      const response = await fetch(\"https://restcountries.eu/rest/v2/all\");\n      const body = await response.json();\n\n      if (!unmounted) {\n        setItems(body.map(({\n          name\n        }) => ({\n          label: name,\n          value: name\n        })));\n        setLoading(false);\n      }\n    }\n\n    getCurrencies();\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      disabled: loading,\n      value: value,\n      onChange: e => setValue(e.currentTarget.value),\n      children: items.map(({\n        label,\n        value\n      }) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: value,\n        children: label\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SmChart, \"uTojDmq0glWsBwxRvvMJ09cp3T0=\");\n\n_c = SmChart;\nexport default SmChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"SmChart\");","map":{"version":3,"sources":["C:/Users/rrand/School/cryptoDash/starterReactFiles/src/SmChart.js"],"names":["React","SmChart","loading","setLoading","useState","items","setItems","value","setValue","useEffect","unmounted","getCurrencies","response","fetch","body","json","map","name","label","e","currentTarget"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,KAAK,CAACI,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACI,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACI,QAAN,EAA1B;AAEAJ,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpB,QAAIC,SAAS,GAAG,KAAhB;;AACA,mBAAeC,aAAf,GAA+B;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sCAD0B,CAA5B;AAGA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,UAAI,CAACL,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CACNQ,IAAI,CAACE,GAAL,CAAS,CAAC;AAAEC,UAAAA;AAAF,SAAD,MAAe;AAAEC,UAAAA,KAAK,EAAED,IAAT;AAAeV,UAAAA,KAAK,EAAEU;AAAtB,SAAf,CAAT,CADM,CAAR;AAGAd,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF;;AACDQ,IAAAA,aAAa;AACb,WAAO,MAAM;AACXD,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFD;AAGD,GAlBD,EAkBG,EAlBH;AAoBA,sBACE;AAAA,4BACE;AAAA,gBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA,YADF,eAEA;AACE,MAAA,QAAQ,EAAEL,OADZ;AAEE,MAAA,KAAK,EAAEK,KAFT;AAGE,MAAA,QAAQ,EAAGY,CAAD,IAAOX,QAAQ,CAACW,CAAC,CAACC,aAAF,CAAgBb,KAAjB,CAH3B;AAAA,gBAKGF,KAAK,CAACW,GAAN,CAAU,CAAC;AAAEE,QAAAA,KAAF;AAASX,QAAAA;AAAT,OAAD,kBACT;AAAoB,QAAA,KAAK,EAAEA,KAA3B;AAAA,kBACGW;AADH,SAAaX,KAAb;AAAA;AAAA;AAAA;AAAA,cADD;AALH;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAzCQN,O;;KAAAA,O;AA2CT,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport './index.css';\r\n\r\nfunction SmChart() {\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [items, setItems] = React.useState([]);\r\n  const [value, setValue] = React.useState();\r\n\r\n  React.useEffect(() => {\r\n    let unmounted = false;\r\n    async function getCurrencies() {\r\n      const response = await fetch(\r\n        \"https://restcountries.eu/rest/v2/all\"\r\n      );\r\n      const body = await response.json();\r\n      if (!unmounted) {\r\n        setItems(\r\n          body.map(({ name }) => ({ label: name, value: name }))\r\n        );\r\n        setLoading(false);\r\n      }\r\n    }\r\n    getCurrencies();\r\n    return () => {\r\n      unmounted = true;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <p>{value}</p>\r\n    <select\r\n      disabled={loading}\r\n      value={value}\r\n      onChange={(e) => setValue(e.currentTarget.value)}\r\n    >\r\n      {items.map(({ label, value }) => (\r\n        <option key={value} value={value}>\r\n          {label}\r\n        </option>\r\n      ))}\r\n    </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SmChart;"]},"metadata":{},"sourceType":"module"}